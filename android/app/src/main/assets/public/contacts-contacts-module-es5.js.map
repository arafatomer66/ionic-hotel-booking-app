{"version":3,"sources":["./src/app/contacts/contacts.page.html","./src/app/contacts/contacts-routing.module.ts","./src/app/contacts/contacts.module.ts","./src/app/contacts/contacts.page.scss","./src/app/contacts/contacts.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,wQAAwQ,oBAAoB,OAAO,qBAAqB,yBAAyB,2BAA2B,sS;;;;;;;;;;;;;;;;;;;ACAnU;AACc;AAER;AAE/C,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,2DAAY;KACxB;CACF,CAAC;AAMF;IAAA;IAAwC,CAAC;IAA5B,yBAAyB;QAJrC,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,yBAAyB,CAAG;IAAD,gCAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBG;AACM;AACF;AAEA;AAEyB;AAEvB;AAW/C;IAAA;IAAiC,CAAC;IAArB,kBAAkB;QAT9B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,kFAAyB;aAC1B;YACD,YAAY,EAAE,CAAC,2DAAY,CAAC;SAC7B,CAAC;OACW,kBAAkB,CAAG;IAAD,yBAAC;CAAA;AAAH;;;;;;;;;;;;ACnB/B,+DAA+D,2I;;;;;;;;;;;;;;;;;;;ACAb;AACwC;AAC/B;AAQ3D;IAIE,sBAAoB,QAAmB,EAAU,UAAuB;QAApD,aAAQ,GAAR,QAAQ,CAAW;QAAU,eAAU,GAAV,UAAU,CAAa;QAFxE,eAAU,GAAe,EAAE,CAAE;IAI7B,CAAC;IAED,mCAAY,GAAZ;QAAA,iBAeC;QAZC,IAAI,OAAO,GAAG;YACZ,MAAM,EAAG,EAAE;YACX,QAAQ,EAAG,IAAI;YACf,cAAc,EAAG,IAAI;SACtB,CAAC;QAEF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC,CAAC,IAAI,CACrC,UAAC,QAAqB;YACpB,KAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;QAC7B,CAAC,CACF,CAAC;IAEJ,CAAC;IAED,2BAAI,GAAJ,UAAK,OAAiB;QACnB,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,EAAG,IAAI,CAAC,CAAC;IACpE,CAAC;IACD,+BAAQ,GAAR;QACK,IAAI,CAAC,YAAY,EAAE,CAAC;IACzB,CAAC;IAAA,CAAC;;gBA1B6B,mEAAQ;gBAAuB,wEAAU;;IAJ7D,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,gJAAmC;;SAEpC,CAAC;+EAK+B,mEAAQ,EAAuB,wEAAU;OAJ7D,YAAY,CAiCxB;IAAD,mBAAC;CAAA;AAjCwB","file":"contacts-contacts-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>contacts</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <ion-list>\\n    <ion-item-sliding *ngFor=\\\"let c of myContacts\\\">\\n        <ion-item>\\n          <ion-label>\\n            {{ c.name.givenName }} <b> {{ c.name.familyName }} </b>\\n            <p> {{ c.phoneNumbers[0].value }} </p>\\n          </ion-label>\\n        </ion-item>\\n\\n        <ion-item-options>\\n        <ion-item-option>\\n            <ion-icon name=\\\"call\\\" slot=\\\"icon-only\\\" ></ion-icon>\\n        </ion-item-option>\\n        </ion-item-options>\\n    </ion-item-sliding>\\n  </ion-list>\\n\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ContactsPage } from './contacts.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ContactsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ContactsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ContactsPageRoutingModule } from './contacts-routing.module';\n\nimport { ContactsPage } from './contacts.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ContactsPageRoutingModule\n  ],\n  declarations: [ContactsPage]\n})\nexport class ContactsPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRhY3RzL2NvbnRhY3RzLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Contacts ,Contact ,ContactName ,ContactField } from \"@ionic-native/contacts/ngx\";\nimport { CallNumber } from \"@ionic-native/call-number/ngx\";\n\n\n@Component({\n  selector: 'app-contacts',\n  templateUrl: './contacts.page.html',\n  styleUrls: ['./contacts.page.scss'],\n})\nexport class ContactsPage implements OnInit {\n\n  myContacts : Contact[] = [] ;\n\n  constructor(private contacts : Contacts ,private callNumber : CallNumber ){\n\n  }\n\n  loadContacts (){\n\n  \n    let options = {\n      filter : '',\n      multiple : true ,\n      hasPhoneNumber : true\n    };\n\n    this.contacts.find(['*'] ,options).then(\n      (contacts  : Contact[] ) => {\n        this.myContacts = contacts;\n      }\n    );\n\n  }\n\n  call(contact : Contact){ \n     this.callNumber.callNumber(contact.phoneNumbers[0].value , true);\n  }\n  ngOnInit(){\n       this.loadContacts();\n  };\n\n\n}\n"],"sourceRoot":""}